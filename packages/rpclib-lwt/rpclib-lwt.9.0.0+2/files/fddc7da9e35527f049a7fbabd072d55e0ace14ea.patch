From fddc7da9e35527f049a7fbabd072d55e0ace14ea Mon Sep 17 00:00:00 2001
From: Marcello Seri <marcello.seri@gmail.com>
Date: Thu, 16 Jun 2022 20:32:22 +0200
Subject: [PATCH] rpclib-js: address deprecation

Signed-off-by: Marcello Seri <marcello.seri@gmail.com>
---
 src/js/rpc_client_js_helper.ml | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/js/rpc_client_js_helper.ml b/src/js/rpc_client_js_helper.ml
index c0ec1e5..1bd3ee7 100644
--- a/src/js/rpc_client_js_helper.ml
+++ b/src/js/rpc_client_js_helper.ml
@@ -5,7 +5,7 @@
 let keys obj =
   let arr =
     Js_of_ocaml.Js.Unsafe.meth_call
-      (Js_of_ocaml.Js.Unsafe.variable "Object")
+      (Js_of_ocaml.Js.Unsafe.pure_js_expr "Object")
       "keys"
       [| Js_of_ocaml.Js.Unsafe.inject obj |]
   in
@@ -16,7 +16,7 @@ let keys obj =
 let is_array obj =
   let str =
     Js_of_ocaml.Js.Unsafe.call
-      (Js_of_ocaml.Js.Unsafe.variable "Object.prototype.toString")
+      (Js_of_ocaml.Js.Unsafe.pure_js_expr "Object.prototype.toString")
       obj
       [||]
   in
@@ -24,7 +24,7 @@ let is_array obj =
 
 
 (* Magic to find out whether something is one of the Js_of_ocaml Javascript string types *)
-let mlString_constr = Js_of_ocaml.Js.Unsafe.variable "MlString"
+let mlString_constr = Js_of_ocaml.Js.Unsafe.pure_js_expr "MlString"
 let is_string obj = Js_of_ocaml.Js.instanceof obj mlString_constr
 
 (* Seems to work. I hope there's a better way of doing this! *)
