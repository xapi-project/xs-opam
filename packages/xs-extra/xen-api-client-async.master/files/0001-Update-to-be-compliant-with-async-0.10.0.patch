From d9214706d8c1ccf62feec7ba909cdf51c104266f Mon Sep 17 00:00:00 2001
From: Yarsin He <yarsin.he@citrix.com>
Date: Tue, 9 Jan 2018 17:05:33 +0800
Subject: [PATCH] Update to be compliant with async 0.10.0.

Signed-off-by: Yarsin He <yarsin.he@citrix.com>
---
 async/xen_api_async_unix.ml  | 9 +++++----
 async/xen_api_async_unix.mli | 6 +++---
 async_examples/event_test.ml | 2 +-
 async_examples/list_vms.ml   | 2 +-
 4 files changed, 10 insertions(+), 9 deletions(-)

diff --git a/async/xen_api_async_unix.ml b/async/xen_api_async_unix.ml
index 0ce9283..1be4eef 100644
--- a/async/xen_api_async_unix.ml
+++ b/async/xen_api_async_unix.ml
@@ -15,7 +15,7 @@
  *
  *)
 open Core.Std
-open Async.Std
+open Async
 open Xen_api
 
 module IO = struct
@@ -58,7 +58,7 @@ module IO = struct
     return () *)
 
   let flush (_, oc) =
-    Async.Std.Writer.flushed oc
+    Async.Writer.flushed oc
 
   let close ((close1, _), (close2, _)) =
     close1 () >>= fun () -> close2 ()
@@ -69,7 +69,8 @@ module IO = struct
       let port = match Uri.port uri with | None -> 80 | Some port -> port in
       begin match Uri.host uri with
         | Some host ->
-          Tcp.connect (Tcp.to_host_and_port host port)
+          let endp = Host_and_port.create ~host ~port in
+          Tcp.connect (Tcp.Where_to_connect.of_host_and_port endp)
           >>| fun (_, ic, oc) ->
           Ok (((fun () -> Reader.close ic), ic),
               ((fun () -> Writer.close oc), oc))
@@ -121,5 +122,5 @@ let make_json ?(timeout=30.) uri call =
   do_it uri req >>| Jsonrpc.response_of_string
 
 
-module Client = Client.ClientF(Deferred)
+module Client = Client.ClientF(struct include Deferred let bind a f = bind a ~f end)
 include Client
diff --git a/async/xen_api_async_unix.mli b/async/xen_api_async_unix.mli
index e565066..7d023d4 100644
--- a/async/xen_api_async_unix.mli
+++ b/async/xen_api_async_unix.mli
@@ -12,12 +12,12 @@
  * GNU Lesser General Public License for more details.
  *)
 
-val make: ?timeout:float -> string -> Rpc.call -> Rpc.response Async.Std.Deferred.t
+val make: ?timeout:float -> string -> Rpc.call -> Rpc.response Async.Deferred.t
 (** [make ?timeout uri] returns an 'rpc' function which can be
     passed to Client.* functions *)
 
-val make_json: ?timeout:float -> string -> Rpc.call -> Rpc.response Async.Std.Deferred.t
+val make_json: ?timeout:float -> string -> Rpc.call -> Rpc.response Async.Deferred.t
 (** [make_json ?timeout uri] returns an 'rpc' function which can be
     passed to Client.* functions *)
 
-include (module type of (Client.ClientF(Async.Std.Deferred)))
+include (module type of (Client.ClientF(struct include Async.Deferred let bind a f = bind a ~f end)))
diff --git a/async_examples/event_test.ml b/async_examples/event_test.ml
index 1b00b29..d4d8947 100644
--- a/async_examples/event_test.ml
+++ b/async_examples/event_test.ml
@@ -13,7 +13,7 @@
  *)
 
 open Core.Std
-open Async.Std
+open Async
 
 open Xen_api_async_unix
 
diff --git a/async_examples/list_vms.ml b/async_examples/list_vms.ml
index 9940a4f..0b3f226 100644
--- a/async_examples/list_vms.ml
+++ b/async_examples/list_vms.ml
@@ -13,7 +13,7 @@
  *)
 
 open Core.Std
-open Async.Std
+open Async
 
 open Xen_api_async_unix
 
-- 
2.12.2.windows.2

